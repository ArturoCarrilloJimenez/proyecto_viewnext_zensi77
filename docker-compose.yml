services:
  python:
    build: ./scrapping
    container_name: python
    tty: true # Para evitar que el contenedor se detenga
    ports:
      - 8080:8080
    working_dir: /scrapping
    volumes:
      - ./scrapping:/scrapping
  db-sql:
    image: mysql:8.0
    container_name: db-sql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - '3306:3306'
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test:
        [
          'CMD',
          'mysql',
          '--user=${MYSQL_USER}',
          '--password=${MYSQL_PASSWORD}',
          '-e',
          'SHOW DATABASES;',
        ]
      interval: 2s
      timeout: 5s
      retries: 5
    restart: always

  artemis-mq:
    image: vromero/activemq-artemis:2.6.1
    volumes:
      - artemis:/var/lib/artemis/etc-override
    environment:
      ENABLE_JMX_EXPORTER: 'true'
      ARTEMIS_MIN_MEMORY: '1512M'
      ARTEMIS_MAX_MEMORY: '2000M'
      ARTEMIS_USERNAME: 'test'
      ARTEMIS_PASSWORD: 'test'
    ports:
      - '8161:8161'

  # TODO se para el servicio
  infinispan:
    image: infinispan/server:14.0.5.Final
    container_name: infinispan
    ports:
      - '11222:11222'
    command: '-c infinispan-demo.xml'
    volumes:
      - ./infinispan/infinispan.xml:/opt/infinispan/server/conf/infinispan-demo.xml:z
    healthcheck:
      test:
        [
          'CMD',
          'curl',
          '-f',
          'http://localhost:11222/rest/v2/cache-managers/default/health/status',
        ]
      interval: 1s
      timeout: 1s
      retries: 50

  elasticsearch:
    container_name: elasticsearch
    image: elasticsearch:7.6.2
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - 'ES_JAVA_OPTS=-Xms2048m -Xmx2048m'
      - 'discovery.type=single-node'
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data/

  kibana:
    image: docker.elastic.co/kibana/kibana:7.6.2
    container_name: kibana
    ports:
      - '5601:5601'
    depends_on:
      - elasticsearch
    environment:
      - 'ELASTICSEARCH_HOSTS=http://elasticsearch:9200'
volumes:
  db_data:
  artemis:
  elasticsearch-data:

networks:
  infinispan:
    driver: bridge
